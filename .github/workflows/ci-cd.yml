name: React CI/CD Pipeline

# Trigger workflow on push to 'main' or pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest  # Define the OS environment
    
    steps:
    # Step 1: Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Specify your desired Node.js version

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install

    # # Step 4: Run tests
    # - name: Run tests
    #   run: npm test -- --ci --coverage # Ensure tests run in CI mode

    # Step 5: Build the React app
    - name: Build app
      run: npm run build
      env:
        CI: false 

    - name: Set Git identity
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        npm run deploy
      env:
        CI: false 

    - name: Deploy to gh-pages branch
      run: npm run deploy
      
      env:
          CI: false 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  



  